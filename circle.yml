version: 2

executorType: docker

containerInfo:
  - image: koding/base@sha256:c53151cedd1a7cd86a66189742835a761d54f1d23c72422832fac69a0916a176

  - image: mongo:2.6
    cmd: ["--nojournal", "--noprealloc", "--smallfiles"]

  - image: koding/postgres

  - image: rabbitmq:3

  - image: redis

stages:

  build:
    workDir: ~/koding
    steps:

      - type: checkout

      - type: cache-restore
        keys:
          - node_modules-{{ checksum "package.json" }}
      - type: cache-restore
        keys:
          - client-node_modules-{{ checksum "client/package.json" }}
      - type: cache-restore
        keys:
          - landing-node_modules-{{ checksum "client/landing/package.json" }}

      - type: shell
        name: npm install
        command: npm install --unsafe-perm

      - type: cache-save
        key: node_modules-{{ checksum "package.json" }}
        paths:
          - node_modules

      - type: cache-save
        key: client-node_modules-{{ checksum "client/package.json" }}
        paths:
          - client/node_modules

      - type: cache-save
        key: landing-node_modules-{{ checksum "client/landing/package.json" }}
        paths:
          - client/landing/node_modules

      - type: shell
        name: coffeelint
        command: $(npm bin)/coffeelint --quiet .

      - type: shell
        name: credentials
        command: |
          export BRANCH=$CIRCLE_BRANCH
          scripts/copy-deployment-credentials.sh

      - type: shell
        name: configure
        command: ./configure --config dev --host localhost:8090 --hostname localhost

      - type: shell
        name: check remote API consistency
        command: ./run exec scripts/api-generator.coffee --check

      - type: shell
        name: check client code quality
        command: scripts/check_client_code_quality.sh

      - type: cache-restore
        keys:
          - client-happypack-{{ .Branch }}-{{ .Revision }}
          - client-happypack-{{ .Branch }}
          - client-happypack-master

      - type: shell
        name: build client
        command: make -C client dist

      - type: cache-save
        key: client-happypack-{{ .Branch }}-{{ .Revision }}-{{ epoch }}
        paths:
          - client/.happypack
      - type: cache-save
        key: client-happypack-{{ .Branch }}-{{ epoch }}
        paths:
          - client/.happypack

      - type: cache-restore
        keys:
          - go-{{ .Branch }}-{{ .Revision }}
          - go-{{ .Branch }}
          - go-master

      - type: shell
        name: go build
        command: go/build.sh

      - type: cache-save
        key: go-{{ .Branch }}-{{ .Revision }}-{{ epoch }}
        paths:
          - go/bin
          - go/pkg
      - type: cache-save
        key: go-{{ .Branch }}-{{ epoch }}
        paths:
          - go/bin
          - go/pkg

      - type: shell
        name: check kite configuration
        command: ./run exec scripts/gotests.sh kites koding/kites/config

      - type: shell
        name: check generated JSON files
        command: ./run exec scripts/check-generated-files.sh

      - type: shell
        name: test kites
        command: ./run exec go/src/koding/kites/e2etest/e2etest.sh

      - type: shell
        name: test klient
        command: ./run exec scripts/test-klient.sh

      - type: shell
        name: test kd
        command: ./run exec scripts/test-kd.sh

      - type: shell
        name: test kontrol
        command: ./run exec scripts/gotests.sh koding/kites/kontrol/kontrol

      - type: shell
        name: test kloud
        command: ./run exec scripts/gotests.sh kites \
          koding/kites/kloud/provider/... koding/kites/kloud/credential/... \
          koding/kites/kloud/stack/... koding/kites/kloud/kloud/...

      - type: shell
        name: test mongo models
        command: ./run exec go test koding/db/mongodb/modelhelper

      - type: shell
        name: run database migration
        command: ./run migrations up

      - type: shell
        name: run
        command: |
          ./run exec supervisord -c supervisord.conf
          nginx -c $(pwd)/nginx.conf
          ./run health-check 30 600

      - type: shell
        name: test social API
        environment:
          EXTRAS: -convey-story=true
        command: ./run exec make -C go/src/socialapi testapi
